{"ast":null,"code":"import axios from 'axios';\nimport store from '../store';\nconst axiosInstance = axios.create({\n  baseURL: 'https://apt-booking-api.herokuapp.com/'\n});\naxiosInstance.interceptors.request.use(config => {\n  const {\n    token\n  } = store.state.auth;\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\nexport default axiosInstance;","map":{"version":3,"names":["axios","store","axiosInstance","create","baseURL","interceptors","request","use","config","token","state","auth","headers","Authorization","error","Promise","reject"],"sources":["/Users/andrew/Documents/DOC/IT/Репозиторії/vue/vue-app/src/utils/axios.js"],"sourcesContent":["import axios from 'axios';\nimport store from '../store';\n\nconst axiosInstance = axios.create({\n  baseURL: 'https://apt-booking-api.herokuapp.com/',\n});\n\naxiosInstance.interceptors.request.use(\n  (config) => {\n    const { token } = store.state.auth;\n\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\nexport default axiosInstance;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,UAAU;AAE5B,MAAMC,aAAa,GAAGF,KAAK,CAACG,MAAM,CAAC;EACjCC,OAAO,EAAE;AACX,CAAC,CAAC;AAEFF,aAAa,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CACnCC,MAAM,IAAK;EACV,MAAM;IAAEC;EAAM,CAAC,GAAGR,KAAK,CAACS,KAAK,CAACC,IAAI;EAElC,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAI,UAASJ,KAAM,EAAC;EAClD;EAEA,OAAOD,MAAM;AACf,CAAC,EACAM,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;AAED,eAAeZ,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}