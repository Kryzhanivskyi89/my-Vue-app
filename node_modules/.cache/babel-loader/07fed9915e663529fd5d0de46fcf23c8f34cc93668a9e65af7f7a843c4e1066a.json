{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, withModifiers as _withModifiers, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_MainTitle = _resolveComponent(\"MainTitle\");\n  const _component_CustomInput = _resolveComponent(\"CustomInput\");\n  const _component_Button = _resolveComponent(\"Button\");\n  const _component_Form = _resolveComponent(\"Form\");\n  const _component_AuthContainer = _resolveComponent(\"AuthContainer\");\n  return _openBlock(), _createBlock(_component_AuthContainer, {\n    class: \"registration\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_MainTitle, {\n      class: \"registration__title\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"Регистрация\")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_Form, {\n      ref: \"form\",\n      class: \"registration__form\",\n      onSubmit: _withModifiers($options.handleSubmit, [\"prevent\"])\n    }, {\n      default: _withCtx(() => [_createVNode(_component_CustomInput, {\n        modelValue: $data.formData.name,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.formData.name = $event),\n        placeholder: \"Name\",\n        autocomplete: \"username\",\n        name: \"name\",\n        rules: $options.nameRules,\n        class: \"registration__input\"\n      }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_CustomInput, {\n        modelValue: $data.formData.email,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.formData.email = $event),\n        placeholder: \"Email\",\n        autocomplete: \"email\",\n        name: \"email\",\n        rules: $options.emailRules,\n        class: \"registration__input\"\n      }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_CustomInput, {\n        modelValue: $data.formData.password,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.formData.password = $event),\n        placeholder: \"Password\",\n        autocomplete: \"current-password\",\n        type: \"password\",\n        name: \"password\",\n        rules: $options.passwordRules,\n        class: \"registration__input\"\n      }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_CustomInput, {\n        modelValue: $data.formData.confirmPassword,\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.formData.confirmPassword = $event),\n        placeholder: \"Confirm password\",\n        autocomplete: \"current-password\",\n        type: \"password\",\n        name: \"confirmPassword\",\n        rules: $options.confirmPassword,\n        class: \"registration__input\"\n      }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_Button, {\n        class: \"registration__btn\",\n        type: \"submit\",\n        loading: $data.loading\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"Вход\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"loading\"])]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onSubmit\"])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_AuthContainer","class","default","_withCtx","_createVNode","_component_MainTitle","_createTextVNode","_","_component_Form","ref","onSubmit","_withModifiers","$options","handleSubmit","_component_CustomInput","modelValue","$data","formData","name","_cache","$event","placeholder","autocomplete","rules","nameRules","email","emailRules","password","type","passwordRules","confirmPassword","_component_Button","loading"],"sources":["/Users/andrew/Documents/DOC/IT/Репозиторії/my-Vue-app/src/components/auth/registration/index.vue"],"sourcesContent":["<template>\n  <AuthContainer class=\"registration\">\n    <MainTitle class=\"registration__title\">Регистрация</MainTitle>\n    <Form ref=\"form\" class=\"registration__form\" @submit.prevent=\"handleSubmit\">\n      <CustomInput\n        v-model=\"formData.name\"\n        placeholder=\"Name\"\n        autocomplete=\"username\"\n        name=\"name\"\n        :rules=\"nameRules\"\n        class=\"registration__input\"\n      />\n      <CustomInput\n        v-model=\"formData.email\"\n        placeholder=\"Email\"\n        autocomplete=\"email\"\n        name=\"email\"\n        :rules=\"emailRules\"\n        class=\"registration__input\"\n      />\n      <CustomInput\n        v-model=\"formData.password\"\n        placeholder=\"Password\"\n        autocomplete=\"current-password\"\n        type=\"password\"\n        name=\"password\"\n        :rules=\"passwordRules\"\n        class=\"registration__input\"\n      />\n      <CustomInput\n        v-model=\"formData.confirmPassword\"\n        placeholder=\"Confirm password\"\n        autocomplete=\"current-password\"\n        type=\"password\"\n        name=\"confirmPassword\"\n        :rules=\"confirmPassword\"\n        class=\"registration__input\"\n      />\n      <Button class=\"registration__btn\" type=\"submit\" :loading=\"loading\"\n        >Вход</Button\n      >\n    </Form>\n  </AuthContainer>\n</template>\n\n<script>\nimport Form from '../../shared/form';\nimport CustomInput from '../../shared/CustomInput';\nimport Button from '../../shared/Button';\nimport AuthContainer from '../AuthContainer';\nimport MainTitle from '../../shared/MainTitle';\nimport {\n  emailValidation,\n  passwordValidation,\n  isRequired,\n} from '../../../utils/validationRules';\nimport { mapActions } from 'vuex';\n\nexport default {\n  // eslint-disable-next-line vue/multi-word-component-names\n  name: 'Registration',\n  components: {\n    Form,\n    CustomInput,\n    Button,\n    AuthContainer,\n    MainTitle,\n  },\n  data() {\n    return {\n      loading: false,\n      formData: {\n        name: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n      },\n    };\n  },\n  computed: {\n    rules() {\n      return {\n        emailValidation,\n        passwordValidation,\n        isRequired,\n      };\n    },\n    nameRules() {\n      return [this.rules.isRequired];\n    },\n    emailRules() {\n      return [this.rules.isRequired, this.rules.emailValidation];\n    },\n    passwordRules() {\n      return [this.rules.isRequired, this.rules.passwordValidation];\n    },\n    confirmPassword() {\n      return [\n        (val) => ({\n          hasPassed: val === this.formData.password,\n          message: 'Пароли не совпадают',\n        }),\n      ];\n    },\n  },\n  methods: {\n    ...mapActions('auth', ['registerUser']),\n    async handleSubmit() {\n      const { form } = this.$refs;\n      const isFormValid = form.validate();\n      const { name, password, email } = this.formData;\n\n      if (isFormValid) {\n        try {\n          this.loading = true;\n\n          await this.registerUser({\n            name,\n            password,\n            email,\n          });\n\n          this.$router.push({ name: 'homepage' });\n          form.reset();\n        } catch (error) {\n          this.$notify({\n            type: 'error',\n            title: 'Произошла ошибка',\n            text: error.message,\n          });\n        } finally {\n          this.loading = false;\n        }\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.registration {\n  &__form {\n    display: block;\n    flex-direction: column;\n  }\n\n  &__title {\n    text-align: center;\n  }\n\n  &__input {\n    margin-bottom: 20px;\n    width: 100%;\n  }\n\n  &__btn {\n    margin-top: 15px;\n    width: 100%;\n  }\n}\n</style>\n"],"mappings":";;;;;;;uBACEA,YAAA,CAyCgBC,wBAAA;IAzCDC,KAAK,EAAC;EAAc;IADrCC,OAAA,EAAAC,QAAA,CAEI,MAA8D,CAA9DC,YAAA,CAA8DC,oBAAA;MAAnDJ,KAAK,EAAC;IAAqB;MAF1CC,OAAA,EAAAC,QAAA,CAE2C,MAAW,CAFtDG,gBAAA,CAE2C,aAAW,E;MAFtDC,CAAA;QAGIH,YAAA,CAsCOI,eAAA;MAtCDC,GAAG,EAAC,MAAM;MAACR,KAAK,EAAC,oBAAoB;MAAES,QAAM,EAHvDC,cAAA,CAGiEC,QAAA,CAAAC,YAAY;;MAH7EX,OAAA,EAAAC,QAAA,CAIM,MAOE,CAPFC,YAAA,CAOEU,sBAAA;QAXRC,UAAA,EAKiBC,KAAA,CAAAC,QAAQ,CAACC,IAAI;QAL9B,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAKiBJ,KAAA,CAAAC,QAAQ,CAACC,IAAI,GAAAE,MAAA;QACtBC,WAAW,EAAC,MAAM;QAClBC,YAAY,EAAC,UAAU;QACvBJ,IAAI,EAAC,MAAM;QACVK,KAAK,EAAEX,QAAA,CAAAY,SAAS;QACjBvB,KAAK,EAAC;wDAERG,YAAA,CAOEU,sBAAA;QAnBRC,UAAA,EAaiBC,KAAA,CAAAC,QAAQ,CAACQ,KAAK;QAb/B,uBAAAN,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAaiBJ,KAAA,CAAAC,QAAQ,CAACQ,KAAK,GAAAL,MAAA;QACvBC,WAAW,EAAC,OAAO;QACnBC,YAAY,EAAC,OAAO;QACpBJ,IAAI,EAAC,OAAO;QACXK,KAAK,EAAEX,QAAA,CAAAc,UAAU;QAClBzB,KAAK,EAAC;wDAERG,YAAA,CAQEU,sBAAA;QA5BRC,UAAA,EAqBiBC,KAAA,CAAAC,QAAQ,CAACU,QAAQ;QArBlC,uBAAAR,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAqBiBJ,KAAA,CAAAC,QAAQ,CAACU,QAAQ,GAAAP,MAAA;QAC1BC,WAAW,EAAC,UAAU;QACtBC,YAAY,EAAC,kBAAkB;QAC/BM,IAAI,EAAC,UAAU;QACfV,IAAI,EAAC,UAAU;QACdK,KAAK,EAAEX,QAAA,CAAAiB,aAAa;QACrB5B,KAAK,EAAC;wDAERG,YAAA,CAQEU,sBAAA;QArCRC,UAAA,EA8BiBC,KAAA,CAAAC,QAAQ,CAACa,eAAe;QA9BzC,uBAAAX,MAAA,QAAAA,MAAA,MAAAC,MAAA,IA8BiBJ,KAAA,CAAAC,QAAQ,CAACa,eAAe,GAAAV,MAAA;QACjCC,WAAW,EAAC,kBAAkB;QAC9BC,YAAY,EAAC,kBAAkB;QAC/BM,IAAI,EAAC,UAAU;QACfV,IAAI,EAAC,iBAAiB;QACrBK,KAAK,EAAEX,QAAA,CAAAkB,eAAe;QACvB7B,KAAK,EAAC;wDAERG,YAAA,CAEN2B,iBAAA;QAFc9B,KAAK,EAAC,mBAAmB;QAAC2B,IAAI,EAAC,QAAQ;QAAEI,OAAO,EAAEhB,KAAA,CAAAgB;;QAtChE9B,OAAA,EAAAC,QAAA,CAuCS,MAAI,CAvCbG,gBAAA,CAuCS,MAAI,E;QAvCbC,CAAA;;MAAAA,CAAA;;IAAAA,CAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}