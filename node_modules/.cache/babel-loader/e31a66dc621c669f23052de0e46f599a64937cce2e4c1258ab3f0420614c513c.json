{"ast":null,"code":"// import VueRouter from 'vue-router';\n// import ErrorPage from './pages/ErrorPage';\n// import store from './store';\n\n// const Homepage = () => import('./pages/Homepage');\n// const Apartment = () => import('./pages/Apartment');\n// const LoginPage = () => import('./pages/Login');\n// const RegistrationPage = () => import('./pages/Registration');\n// const MyOrdersPage = () => import('./pages/MyOrders');\n\n// const routes = [\n//   {\n//     path: '/',\n//     component: Homepage,\n//     name: 'homepage',\n//   },\n//   {\n//     path: '/apartments/:id',\n//     component: Apartment,\n//     name: 'apartment',\n//     meta: {\n//       requiresAuth: true,\n//     },\n//   },\n//   {\n//     path: '/my-orders',\n//     component: MyOrdersPage,\n//     name: 'my-orders',\n//     meta: {\n//       requiresAuth: true,\n//     },\n//   },\n//   {\n//     path: '/login',\n//     component: LoginPage,\n//     name: 'login-page',\n//     meta: {\n//       hideForAuth: true,\n//     },\n//   },\n//   {\n//     path: '/registration',\n//     component: RegistrationPage,\n//     name: 'registration-page',\n//     meta: {\n//       hideForAuth: true,\n//     },\n//   },\n//   {\n//     path: '*',\n//     component: ErrorPage,\n//     name: 'error-page',\n//   },\n// ];\n\n// const router = new VueRouter({\n//   routes,\n//   mode: 'history',\n// });\n\n// router.beforeEach((to, from, next) => {\n//   const isLoggedIn = store.getters['auth/isLoggedIn'];\n\n//   if (to.matched.some((record) => record.meta.requiresAuth)) {\n//     if (!isLoggedIn) {\n//       next({ name: 'login-page' });\n//     }\n//   }\n\n//   if (to.matched.some((record) => record.meta.hideForAuth)) {\n//     if (isLoggedIn) {\n//       next({ name: 'homepage' });\n//     }\n//   }\n\n//   next();\n// });\n\n// export default router;","map":{"version":3,"names":[],"sources":["/Users/andrew/Documents/DOC/IT/Репозиторії/vue/vue-app/src/router.js"],"sourcesContent":["// import VueRouter from 'vue-router';\n// import ErrorPage from './pages/ErrorPage';\n// import store from './store';\n\n// const Homepage = () => import('./pages/Homepage');\n// const Apartment = () => import('./pages/Apartment');\n// const LoginPage = () => import('./pages/Login');\n// const RegistrationPage = () => import('./pages/Registration');\n// const MyOrdersPage = () => import('./pages/MyOrders');\n\n// const routes = [\n//   {\n//     path: '/',\n//     component: Homepage,\n//     name: 'homepage',\n//   },\n//   {\n//     path: '/apartments/:id',\n//     component: Apartment,\n//     name: 'apartment',\n//     meta: {\n//       requiresAuth: true,\n//     },\n//   },\n//   {\n//     path: '/my-orders',\n//     component: MyOrdersPage,\n//     name: 'my-orders',\n//     meta: {\n//       requiresAuth: true,\n//     },\n//   },\n//   {\n//     path: '/login',\n//     component: LoginPage,\n//     name: 'login-page',\n//     meta: {\n//       hideForAuth: true,\n//     },\n//   },\n//   {\n//     path: '/registration',\n//     component: RegistrationPage,\n//     name: 'registration-page',\n//     meta: {\n//       hideForAuth: true,\n//     },\n//   },\n//   {\n//     path: '*',\n//     component: ErrorPage,\n//     name: 'error-page',\n//   },\n// ];\n\n// const router = new VueRouter({\n//   routes,\n//   mode: 'history',\n// });\n\n// router.beforeEach((to, from, next) => {\n//   const isLoggedIn = store.getters['auth/isLoggedIn'];\n\n//   if (to.matched.some((record) => record.meta.requiresAuth)) {\n//     if (!isLoggedIn) {\n//       next({ name: 'login-page' });\n//     }\n//   }\n\n//   if (to.matched.some((record) => record.meta.hideForAuth)) {\n//     if (isLoggedIn) {\n//       next({ name: 'homepage' });\n//     }\n//   }\n\n//   next();\n// });\n\n// export default router;\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA"},"metadata":{},"sourceType":"script","externalDependencies":[]}