{"ast":null,"code":"import ApartmentsList from '../components/apartment/ApartmentsList';\nimport ApartmentsItem from '../components/apartment/ApartmentsItem';\nimport ApartmentsFilterForm from '../components/apartment/ApartmentsFilterForm';\nimport Container from '../components/shared/Container';\nimport { getApartmentsList } from '../services/apartments.service';\nimport SectionWithHeaderSpacer from '../components/shared/SectionWithHeaderSpacer';\nexport default {\n  name: 'App',\n  components: {\n    ApartmentsList,\n    ApartmentsItem,\n    ApartmentsFilterForm,\n    Container,\n    SectionWithHeaderSpacer\n  },\n  data() {\n    return {\n      text: '',\n      apartments: [],\n      filters: {\n        city: '',\n        price: 0\n      }\n    };\n  },\n  computed: {\n    filteredApartments() {\n      return this.filterByCityName(this.filterByPrice(this.apartments));\n    }\n  },\n  async created() {\n    try {\n      const {\n        data\n      } = await getApartmentsList();\n      this.apartments = data;\n    } catch (error) {\n      console.error(error);\n    }\n  },\n  methods: {\n    filter({\n      city,\n      price\n    }) {\n      this.filters.city = city;\n      this.filters.price = price;\n    },\n    filterByCityName(apartments) {\n      if (!this.filters.city) return apartments;\n      return apartments.filter(apartment => {\n        return apartment.location.city === this.filters.city;\n      });\n    },\n    filterByPrice(apartments) {\n      if (!this.filters.price) return apartments;\n      return apartments.filter(apartment => {\n        return apartment.price >= this.filters.price;\n      });\n    }\n  }\n};","map":{"version":3,"names":["ApartmentsList","ApartmentsItem","ApartmentsFilterForm","Container","getApartmentsList","SectionWithHeaderSpacer","name","components","data","text","apartments","filters","city","price","computed","filteredApartments","filterByCityName","filterByPrice","created","error","console","methods","filter","apartment","location"],"sources":["/Users/andrew/Documents/DOC/IT/Репозиторії/vue/vue-app/src/pages/Homepage.vue"],"sourcesContent":["<template>\n  <main class=\"homepage\">\n    <SectionWithHeaderSpacer>\n      <Container>\n        <ApartmentsFilterForm class=\"apartments-filter\" @submit=\"filter\" />\n      </Container>\n      <Container>\n        <p v-if=\"!filteredApartments.length\">Ничего не найдено</p>\n        <ApartmentsList v-else :items=\"filteredApartments\">\n          <template v-slot:apartment=\"{ apartment }\">\n            <ApartmentsItem\n              :key=\"apartment.id\"\n              :id=\"apartment.id\"\n              :descr=\"apartment.descr\"\n              :rating=\"apartment.rating\"\n              :imgSrc=\"apartment.imgUrl\"\n              :price=\"apartment.price\"\n            />\n          </template>\n        </ApartmentsList>\n      </Container>\n    </SectionWithHeaderSpacer>\n  </main>\n</template>\n\n<script>\nimport ApartmentsList from '../components/apartment/ApartmentsList';\nimport ApartmentsItem from '../components/apartment/ApartmentsItem';\nimport ApartmentsFilterForm from '../components/apartment/ApartmentsFilterForm';\nimport Container from '../components/shared/Container';\nimport { getApartmentsList } from '../services/apartments.service';\nimport SectionWithHeaderSpacer from '../components/shared/SectionWithHeaderSpacer';\n\nexport default {\n  name: 'App',\n  components: {\n    ApartmentsList,\n    ApartmentsItem,\n    ApartmentsFilterForm,\n    Container,\n    SectionWithHeaderSpacer,\n  },\n  data() {\n    return {\n      text: '',\n      apartments: [],\n      filters: {\n        city: '',\n        price: 0,\n      },\n    };\n  },\n  computed: {\n    filteredApartments() {\n      return this.filterByCityName(this.filterByPrice(this.apartments));\n    },\n  },\n  async created() {\n    try {\n      const { data } = await getApartmentsList();\n      this.apartments = data;\n    } catch (error) {\n      console.error(error);\n    }\n  },\n  methods: {\n    filter({ city, price }) {\n      this.filters.city = city;\n      this.filters.price = price;\n    },\n    filterByCityName(apartments) {\n      if (!this.filters.city) return apartments;\n\n      return apartments.filter((apartment) => {\n        return apartment.location.city === this.filters.city;\n      });\n    },\n    filterByPrice(apartments) {\n      if (!this.filters.price) return apartments;\n\n      return apartments.filter((apartment) => {\n        return apartment.price >= this.filters.price;\n      });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.apartments-filter {\n  margin-bottom: 40px;\n}\n</style>\n"],"mappings":"AA0BA,OAAOA,cAAa,MAAO,wCAAwC;AACnE,OAAOC,cAAa,MAAO,wCAAwC;AACnE,OAAOC,oBAAmB,MAAO,8CAA8C;AAC/E,OAAOC,SAAQ,MAAO,gCAAgC;AACtD,SAASC,iBAAgB,QAAS,gCAAgC;AAClE,OAAOC,uBAAsB,MAAO,8CAA8C;AAElF,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IACVP,cAAc;IACdC,cAAc;IACdC,oBAAoB;IACpBC,SAAS;IACTE;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,EAAE;MACRC,UAAU,EAAE,EAAE;MACdC,OAAO,EAAE;QACPC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE;MACT;IACF,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,kBAAkBA,CAAA,EAAG;MACnB,OAAO,IAAI,CAACC,gBAAgB,CAAC,IAAI,CAACC,aAAa,CAAC,IAAI,CAACP,UAAU,CAAC,CAAC;IACnE;EACF,CAAC;EACD,MAAMQ,OAAOA,CAAA,EAAG;IACd,IAAI;MACF,MAAM;QAAEV;MAAK,IAAI,MAAMJ,iBAAiB,CAAC,CAAC;MAC1C,IAAI,CAACM,UAAS,GAAIF,IAAI;IACxB,EAAE,OAAOW,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EACDE,OAAO,EAAE;IACPC,MAAMA,CAAC;MAAEV,IAAI;MAAEC;IAAM,CAAC,EAAE;MACtB,IAAI,CAACF,OAAO,CAACC,IAAG,GAAIA,IAAI;MACxB,IAAI,CAACD,OAAO,CAACE,KAAI,GAAIA,KAAK;IAC5B,CAAC;IACDG,gBAAgBA,CAACN,UAAU,EAAE;MAC3B,IAAI,CAAC,IAAI,CAACC,OAAO,CAACC,IAAI,EAAE,OAAOF,UAAU;MAEzC,OAAOA,UAAU,CAACY,MAAM,CAAEC,SAAS,IAAK;QACtC,OAAOA,SAAS,CAACC,QAAQ,CAACZ,IAAG,KAAM,IAAI,CAACD,OAAO,CAACC,IAAI;MACtD,CAAC,CAAC;IACJ,CAAC;IACDK,aAAaA,CAACP,UAAU,EAAE;MACxB,IAAI,CAAC,IAAI,CAACC,OAAO,CAACE,KAAK,EAAE,OAAOH,UAAU;MAE1C,OAAOA,UAAU,CAACY,MAAM,CAAEC,SAAS,IAAK;QACtC,OAAOA,SAAS,CAACV,KAAI,IAAK,IAAI,CAACF,OAAO,CAACE,KAAK;MAC9C,CAAC,CAAC;IACJ;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}